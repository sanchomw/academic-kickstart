layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` > 24300) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Bananas", "Apples, fresh", "Strawberries, fresh", "Grapes, fresh", "Oranges, fresh or dried")) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Potatoes, fresh or chilled nes","Tomatoes, fresh or chilled","Onions and shallots, fresh or chilled","Carrots and turnips, fresh or chilled","Cauliflowers and headed broccoli, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Beer made from malt","Grape wines nes,incl fort&grape must,unfermntd by add alc,in ctnr > 2l","Coffee, roasted, not decaffeinated","Tea")) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#shorten label
temp.df[2,2] <- "Grape Wines"
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Maize (corn)","Rice, husked (brown)","Wheat (Durum wheat, Wheat nes and meslin)","Germ of cereals, whole, rolled, flaked or ground")) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
x <- plant.data %>% filter(`Total Water` < 336)
22/355
rm(x)
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` > 40000) %>%
mutate(#`Description (long)` = gsub('(?s)(?=(?:.{25})+$)', "<br>", `Description (long)`, perl = TRUE),
`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` > 40000) %>%
mutate(#`Description (long)` = gsub('(?s)(?=(?:.{25})+$)', "<br>", `Description (long)`, perl = TRUE),
`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Turkey meat and meat offal prepared or preserved, excluding livers", "Dom fowl,duck,goose&guinea fowl meat&meat offal prep/presvd exc livers", "Bovine carcasses and half carcasses, fresh or chilled", "Sheep carcasses and half carcasses, fresh or chilled", "Lamb carcasses and half carcasses, fresh or chilled", "Swine carcasses and half carcasses, fresh or chilled"  )) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Turkey meat and meat offal prepared or preserved, excluding livers", "Dom fowl,duck,goose&guinea fowl meat&meat offal prep/presvd exc livers", "Bovine carcasses and half carcasses, fresh or chilled", "Sheep carcasses and half carcasses, fresh or chilled", "Lamb carcasses and half carcasses, fresh or chilled", "Swine carcasses and half carcasses, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
filter(`Description (long)` %in% c("Turkey meat and meat offal prepared or preserved, excluding livers", "Dom fowl,duck,goose&guinea fowl meat&meat offal prep/presvd exc livers", "Bovine carcasses and half carcasses, fresh or chilled", "Sheep carcasses and half carcasses, fresh or chilled", "Lamb carcasses and half carcasses, fresh or chilled", "Swine carcasses and half carcasses, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Bananas", "Apples, fresh", "Strawberries, fresh", "Grapes, fresh", "Oranges, fresh or dried")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Potatoes, fresh or chilled nes","Tomatoes, fresh or chilled","Onions and shallots, fresh or chilled","Carrots and turnips, fresh or chilled","Cauliflowers and headed broccoli, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Maize (corn)","Rice, husked (brown)","Wheat (Durum wheat, Wheat nes and meslin)","Germ of cereals, whole, rolled, flaked or ground")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` > 40000) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
filter(`Description (long)` %in% c("Turkey meat and meat offal prepared or preserved, excluding livers", "Dom fowl,duck,goose&guinea fowl meat&meat offal prep/presvd exc livers", "Bovine carcasses and half carcasses, fresh or chilled", "Sheep carcasses and half carcasses, fresh or chilled", "Lamb carcasses and half carcasses, fresh or chilled", "Swine carcasses and half carcasses, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
filter(`Description (long)` %in% c("Bovine cuts boneless, fresh or chilled", "Bovine cuts bone in, fresh or chilled",
"Bovine cuts bone in, frozen", "Bovine cuts boneless, frozen", "Bovine carcasses and half carcasses, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
10942/15415
blogdown::serve_site()
20/355
22/355
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
library(blogdown)
library(tidyverse)
library(maps)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(ggspatial)
library(plotly)
library(widgetframe)
library(httr)
library(openxlsx)
library(scales)
library(DT)
#helper functions#
create_dt <- function(x){
DT::datatable(x,
extensions = 'Buttons',
options = list(dom = 'Blfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
lengthMenu = list(c(10,25,50,-1),
c(10,25,50,"All"))))
}
#get the world map data
world <- ne_countries(scale = "medium", returnclass = "sf")
#plot africa with a cutout of the next map
plot1 <- ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-20,50), ylim = c(-40, 30), expand = FALSE)+
geom_rect(xmin = 14, xmax = 22, ymin = -37, ymax = -29, fill = NA, color = "black", size = 1.5) +
labs(x = "", y = "")+
theme_bw()+
theme(panel.background = element_rect(fill = "azure"),
panel.border = element_rect(fill = NA))
#plot1 <- ggplotly(plot1)
#map with capetown circled
plot2 <- ggplot(data = world) +
geom_sf() +
annotation_scale(location = "bl", width_hint = 0.5, unit_category = "imperial") +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(14, 22), ylim = c(-37, -29), expand = FALSE)+
geom_point(aes(x = 18.4241, y = -33.9249), shape = 21, color = "blue",size = 15, fill = NA)+
labs(x = "", y = "")+
theme_bw()+
theme(panel.background = element_rect(fill = "azure"),
panel.border = element_rect(fill = NA))
#plot2 <- ggplotly(plot2)
#geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
#33.9249° S, 18.4241° E
plot1 #%>%
#frameWidget(width = "100%", height = "100%")
plot2 #%>%
#frameWidget(width = "100%", height = "100%")
#get earth water
earth.water <- c("Fresh", rep("Salty", times =39))
#get surface water as part of fresh
fresh.water <- c(rep("Frozen", times = 57), rep("Underground", times = 25), "Surface")
labels = c("All Water","Salty", "Fresh", "Frozen", "Underground", "Surface")
parents = c("", "All Water","All Water", "Fresh", "Fresh", "Fresh")
plot3a <- plot_ly(labels = labels,
parents = parents,
values = c(100, 97.5, 2.5, 1.7, 0.75, .03),
type = "sunburst",
branchvalues = "total")
plot3b <- plot_ly(labels = c("Fresh", "Frozen", "Underground", "Surface"),
parents = c("", "Fresh", "Fresh", "Fresh"),
values = c(100, 68, 30.1, 1.2),
type = "sunburst",
branchvalues = "total"
)
plot3a %>%
frameWidget(width = "100%", height = "100%")
plot3b %>%
frameWidget(width = "100%", height = "100%")
#set up data
Sector <- c("Domestic/Household", "Industrial", "Agriculture")
Percent <- c(12, 19, 69)
temp.df <- as.data.frame(cbind(Sector, Percent))
plot_ly(temp.df, labels = ~Sector, values = ~Percent, type = "pie") %>%
layout(title = "Worldwide Water Use by Sector")
#links
#https://waterfootprint.org/en/resources/waterstat/product-water-footprint-statistics/
options(scipen = 999)
#need to click on the data in github, right click "view raw", and then click "Copy link address" for this to work
plant.data <- read.xlsx("https://github.com/sanchomw/blog-data/blob/master/Water_Use_Crops.xlsx?raw=true")
animal.data <- read.xlsx("https://github.com/sanchomw/blog-data/blob/master/Water_Use_Animals.xlsx?raw=true")
#need to fill data down rows
animal.data <- animal.data %>%
fill(`HS.(PC-TAS).code`:Weighted.average)
plant.data <- plant.data %>%
fill(`Product.code.(FAOSTAT)`:Global.average)
#long to wide, remove unecessary rows, get total water
animal.data <- animal.data %>%
select(-c(Grazing:Industrial)) %>%
spread(., Water.Food.Print, Weighted.average)%>%
mutate(`Total Water` = Blue+Green+Grey) %>%
select(`Description (short)` = `Product.description.(SITC)`, `Description (long)` = `Product.discription.(HS)`, Blue, Green, Grey, `Total Water`)
plant.data <- plant.data %>%
spread(. ,Water.Footprint, Global.average) %>%
mutate(`Total Water` = Blue+Green+Grey)  %>%
select(`Description (short)` = `Product.description.(FAOSTAT)`, `Description (long)` = `Product.description.(HS)`, Blue, Green, Grey, `Total Water`)
#get veg data
veg <- c("Vegetables", 322, 1.34, 26, 154)
#get beef data
beef <- c("Beef", 15415, 10.19, 112, 153)
#combine
temp.df <- as.data.frame(rbind(veg, beef))
#name columns
colnames(temp.df) <- c("Product", "Total Water Footprint", "Calorie (liter/kcal)",
"Protein (liter/g protein)", "Fat (liter/g fat)")
#make the numeric columns numeric
temp.df[,2:5] <- apply(temp.df[,2:5], 2, function(x) as.character(x))
temp.df[,2:5] <- apply(temp.df[,2:5], 2, function(x) as.numeric(x))
#plot 1 - no Cal
plot4a <- plot_ly(temp.df, x = ~Product, y = ~`Total Water Footprint`, type = "bar", name = "No Calories")
#plot 2 - with calories
plot4b <- plot_ly(temp.df, x = ~Product, y = ~`Calorie (liter/kcal)`, type = "bar", name = "With Calories")
#plot 3 - Calories of Protein
plot4c <- plot_ly(temp.df, x = ~Product, y = ~`Protein (liter/g protein)`, type = "bar", name = "Calories of Protein")
#plot 4 - Calories of Fat
plot4d <- plot_ly(temp.df, x = ~Product, y = ~`Fat (liter/g fat)`, type = "bar", name = "Calories of Fat")
#combine
plot4 <- subplot(plot4a, plot4b, plot4c, plot4d, nrows = 2)
plot4
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` < 215) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` > 24300) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Bananas", "Apples, fresh", "Strawberries, fresh", "Grapes, fresh", "Oranges, fresh or dried")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Potatoes, fresh or chilled nes","Tomatoes, fresh or chilled","Onions and shallots, fresh or chilled","Carrots and turnips, fresh or chilled","Cauliflowers and headed broccoli, fresh or chilled")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Beer made from malt","Grape wines nes,incl fort&grape must,unfermntd by add alc,in ctnr > 2l","Coffee, roasted, not decaffeinated","Tea")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#shorten label
temp.df[2,2] <- "Grape Wines"
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- plant.data %>%
filter(`Description (long)` %in% c("Maize (corn)","Rice, husked (brown)","Wheat (Durum wheat, Wheat nes and meslin)","Germ of cereals, whole, rolled, flaked or ground")) %>%
arrange(`Total Water`) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` < 1160) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#pull out bottom 5, get label for plotting
temp.df <- animal.data %>%
arrange(`Total Water`) %>%
filter(`Total Water` > 40000) %>%
mutate(`Description (long)` = gsub('(.{1,30})(\\s|$)', "\\1<br>", `Description (long)`),
Label = comma(`Total Water`, accuracy = 1))
#factor to save order when plotting
temp.df$`Description (long)` <- factor(temp.df$`Description (long)`, level = c(as.character(temp.df$`Description (long)`)))
plot_ly(temp.df, x = ~`Description (long)`, y =~Blue, type = "bar", name = "Blue", marker = list(color = "blue")) %>%
add_trace(y = ~Green, name = "Green", marker = list(color = "green")) %>%
add_trace(y = ~Grey, name = "Grey", marker = list(color = "grey")) %>%
add_text(y = ~`Total Water`, text = ~`Label`, hoverinfo = "none", textposition = "top center", name = "Total Water Footprint", marker = NULL) %>%
layout(barmode = "stack",
yaxis = list(title = "Water (Liters)"),
xaxis = list(title = "Product"))
#links
#https://waterfootprint.org/en/resources/waterstat/product-water-footprint-statistics/
options(scipen = 999)
#need to click on the data in github, right click "view raw", and then click "Copy link address" for this to work
plant.data <- read.xlsx("https://github.com/sanchomw/blog-data/blob/master/Water_Use_Crops.xlsx?raw=true")
animal.data <- read.xlsx("https://github.com/sanchomw/blog-data/blob/master/Water_Use_Animals.xlsx?raw=true")
#need to fill data down rows
animal.data <- animal.data %>%
fill(`HS.(PC-TAS).code`:Weighted.average)
plant.data <- plant.data %>%
fill(`Product.code.(FAOSTAT)`:Global.average)
#long to wide, remove unecessary rows, get total water
animal.data <- animal.data %>%
select(-c(Grazing:Industrial)) %>%
spread(., Water.Food.Print, Weighted.average)%>%
mutate(`Total Water` = Blue+Green+Grey) %>%
select(`Description (short)` = `Product.description.(SITC)`, `Description (long)` = `Product.discription.(HS)`, Blue, Green, Grey, `Total Water`)
plant.data <- plant.data %>%
spread(. ,Water.Footprint, Global.average) %>%
mutate(`Total Water` = Blue+Green+Grey)  %>%
select(`Description (short)` = `Product.description.(FAOSTAT)`, `Description (long)` = `Product.description.(HS)`, Blue, Green, Grey, `Total Water`)
blogdown::serve_site()
blogdown::serve_site()
