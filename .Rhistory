labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#plot it
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label(aes(y = 1.2), angle = 90) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#plot it
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2), angle = 90) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
blogdown::serve_site()
library(blogdown)
serve_site()
library(plotly)
install.packages(plotly)
install.packages("plotly")
library(plotly)
install.packages("widgetframe")
library(widgetframe)
plot
serve_site()
#load the libraries
library(blogdown)
library(ggplot2)
library(tidyverse)
library(scales)
#make a vector of years
Year <- c(1965, 2003, 2004, 2005, 2012, 2019)
#make a dummy variable for plotting
dummy <- c(1,1,1,1,1,1)
#make a vector of viruses
Virus <- c("229E &\nOC43", "SARS-CoV", "NL63", "HKU1", "MERS-CoV", "2019 Novel\nCoronavirus")
#combine the vectors and make a df
temp.df <- as.data.frame(cbind(Year, Virus, dummy))
#convert year to date
temp.df <- temp.df %>%
mutate(Year = as.Date(ISOdate(as.numeric(as.character(Year)), 1, 1)))
#plot it
plot <- ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(siseserze = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4)
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy))
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2))
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year")
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(siseserze = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#plot it
ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(plot)
#plot it
plot <- ggplot(temp.df, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label_repel(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
scale_x_date(labels = date_format("%Y"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(plot)
#load the libraries
library(blogdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(ggrepel)
library(plotly)
library(widgetframe)
#make a vector of years
Year <- c(1965, 2003, 2004, 2005, 2012, 2019)
#make a dummy variable for plotting
dummy <- c(1,1,1,1,1,1)
#make a vector of viruses
Virus <- c("229E &\nOC43", "SARS-CoV", "NL63", "HKU1", "MERS-CoV", "2019 Novel\nCoronavirus")
#combine the vectors and make a df
temp.df <- as.data.frame(cbind(Year, Virus, dummy))
#convert year to date
virus.year <- temp.df %>%
mutate(Year = as.Date(ISOdate(as.numeric(as.character(Year)), 1, 1)))
#clean it up
rm(Year, dummy, Virus, temp.df)
#load the libraries
library(blogdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(ggrepel)
library(plotly)
library(widgetframe)
#make a vector of years
Year <- c(1965, 2003, 2004, 2005, 2012, 2019)
#make a dummy variable for plotting
dummy <- c(1,1,1,1,1,1)
#make a vector of viruses
Virus <- c("229E &\nOC43", "SARS-CoV", "NL63", "HKU1", "MERS-CoV", "2019 Novel\nCoronavirus")
#combine the vectors and make a df
virus.year <- as.data.frame(cbind(Year, Virus, dummy))
#convert year to date
#virus.year <- temp.df %>%
#  mutate(Year = as.Date(ISOdate(as.numeric(as.character(Year)), 1, 1)))
#clean it up
rm(Year, dummy, Virus#, temp.df
)
#plot it
#plot1 <-
ggplot(virus.year, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
#scale_x_date(labels = date_format("%Y"))+
scale_x_continuous(breaks = seq(from = 1960, to = 2020, by = 5))
str(virus.year)
#convert year to numeric
virus.year <- virus.year %>%
mutate(Year = as.numeric(as.character(Year)), 1, 1)
str(virus.year)
#clean it up
rm(Year, dummy, Virus#, temp.df
)
#plot it
#plot1 <-
ggplot(virus.year, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
#scale_x_date(labels = date_format("%Y"))+
scale_x_continuous(breaks = seq(from = 1960, to = 2020, by = 5))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank())
serve_site()
blogdown::serve_site()
country <- c("Australia","Canada","China","Hong Kong","Macau","Taiwan","France",
"Germany","India","Indonesia","Italy","Kuwait","Malaysia","Mongolia","New Zealand",
"Philippines","Ireland","Korea","Romania","Russia","Singapore","South Africa","Spain",
"Sweden","Switzerland","Thailand","United Kingdom","United States","Vietnam")
infections <- c(6,251,5327,1755,1,346,7,9,3,2,4,1,5,9,1,14,1,3,1,1,238,1,1,5,1,9,4,27,63)
deaths <- c(0,43,349,299,0,37,1,0,0,0,0,0,2,0,0,2,0,0,0,0,33,1,0,0,0,2,0,0,5)
first.case <- c("2003-02-26","2003-02-23","2002-11-16","2003-02-15","2003-05-05","2003-02-25","2003-03-21",
"2003-03-09","2003-04-25","2003-04-06","2003-03-12","2003-04-09","2003-03-14","2003-03-31","2003-04-20",
"2003-02-25","2003-02-27","2003-04-25","2003-03-19","2003-05-05","2003-02-25","2003-04-03","2003-03-26",
"2003-03-28","2003-03-09","2003-03-11","2003-03-01","2003-02-24","2003-02-23")
#load the libraries
library(blogdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(ggrepel)
library(plotly)
library(widgetframe)
#make a vector of years
Year <- c(1965, 2003, 2004, 2005, 2012, 2019)
#make a dummy variable for plotting
dummy <- c(1,1,1,1,1,1)
#make a vector of viruses
Virus <- c("229E &\nOC43", "SARS-CoV", "NL63", "HKU1", "MERS-CoV", "2019 Novel\nCoronavirus")
#combine the vectors and make a df
virus.year <- as.data.frame(cbind(Year, Virus, dummy))
#convert year to numeric
virus.year <- virus.year %>%
mutate(Year = as.numeric(as.character(Year)), 1, 1)
#clean it up
rm(Year, dummy, Virus)
#plot it
plot1 <- ggplot(virus.year, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
#scale_x_date(labels = date_format("%Y"))+
scale_x_continuous(breaks = seq(from = 1960, to = 2020, by = 5))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank())
#plotify it
plot1 <- ggplotly(plot1, tooltip = c("label", "x"))
plot1 %>%
frameWidget(width = "100%", height = "100%")
country <- c("Australia","Canada","China","Hong Kong","Macau","Taiwan","France",
"Germany","India","Indonesia","Italy","Kuwait","Malaysia","Mongolia","New Zealand",
"Philippines","Ireland","Korea","Romania","Russia","Singapore","South Africa","Spain",
"Sweden","Switzerland","Thailand","United Kingdom","United States","Vietnam")
infections <- c(6,251,5327,1755,1,346,7,9,3,2,4,1,5,9,1,14,1,3,1,1,238,1,1,5,1,9,4,27,63)
deaths <- c(0,43,349,299,0,37,1,0,0,0,0,0,2,0,0,2,0,0,0,0,33,1,0,0,0,2,0,0,5)
first.case <- c("2003-02-26","2003-02-23","2002-11-16","2003-02-15","2003-05-05","2003-02-25","2003-03-21",
"2003-03-09","2003-04-25","2003-04-06","2003-03-12","2003-04-09","2003-03-14","2003-03-31","2003-04-20",
"2003-02-25","2003-02-27","2003-04-25","2003-03-19","2003-05-05","2003-02-25","2003-04-03","2003-03-26",
"2003-03-28","2003-03-09","2003-03-11","2003-03-01","2003-02-24","2003-02-23")
last.case <- c("2003-04-01","2003-06-12","2003-06-03","2003-05-31","2003-05-05","2003-06-15","2003-05-03",
"2003-05-06","2003-05-06","2003-04-17","2003-04-20","2003-04-09","2003-04-22","2003-05-06","2003-04-20",
"2003-05-05","2003-02-27","2003-05-10","2003-03-19","2003-05-05","2003-05-05","2003-04-03","2003-03-26",
"2003-04-23","2003-03-09","2003-05-27","2003-04-01","2003-07-13","2003-04-14")
sars.data <- cbind(country, infections, deaths, first.case, last.case)
View(sars.data)
blogdown::serve_site()
blogdown::serve_site()
774/8098
744/8096
#datasource: https://www.who.int/csr/sars/country/table2004_04_21/en/
#get the raw data into vectors
country <- c("Australia","Canada","China","Hong Kong","Macau","Taiwan","France",
"Germany","India","Indonesia","Italy","Kuwait","Malaysia","Mongolia","New Zealand",
"Philippines","Ireland","Korea","Romania","Russia","Singapore","South Africa","Spain",
"Sweden","Switzerland","Thailand","United Kingdom","United States","Vietnam")
infections <- c(6,251,5327,1755,1,346,7,9,3,2,4,1,5,9,1,14,1,3,1,1,238,1,1,5,1,9,4,27,63)
deaths <- c(0,43,349,299,0,37,1,0,0,0,0,0,2,0,0,2,0,0,0,0,33,1,0,0,0,2,0,0,5)
first.case <- c("2003-02-26","2003-02-23","2002-11-16","2003-02-15","2003-05-05","2003-02-25","2003-03-21",
"2003-03-09","2003-04-25","2003-04-06","2003-03-12","2003-04-09","2003-03-14","2003-03-31","2003-04-20",
"2003-02-25","2003-02-27","2003-04-25","2003-03-19","2003-05-05","2003-02-25","2003-04-03","2003-03-26",
"2003-03-28","2003-03-09","2003-03-11","2003-03-01","2003-02-24","2003-02-23")
last.case <- c("2003-04-01","2003-06-12","2003-06-03","2003-05-31","2003-05-05","2003-06-15","2003-05-03",
"2003-05-06","2003-05-06","2003-04-17","2003-04-20","2003-04-09","2003-04-22","2003-05-06","2003-04-20",
"2003-05-05","2003-02-27","2003-05-10","2003-03-19","2003-05-05","2003-05-05","2003-04-03","2003-03-26",
"2003-04-23","2003-03-09","2003-05-27","2003-04-01","2003-07-13","2003-04-14")
#combine the vectors into a dataframe
sars.data <- cbind(country, infections, deaths, first.case, last.case)
country.text <- c("Australia","Canada","China","Hong Kong","Macau","Taiwan","France",
"Germany","India","Indonesia","Italy","Kuwait","Malaysia","Mongolia","New Zealand",
"Philippines","Ireland","Korea","Romania","Russia","Singapore","South Africa","Spain",
"Sweden","Switzerland","Thailand","United Kingdom","United States","Vietnam")
country.code <- c("AUS", "CAN", "CHN", "HKG", "MAC", "TWN", "FRA", "DEU", "IND",
"IDN", "ITA", "KWT", "MYS", "MNG", "NZL", "PHL", "IRL", "KOR",
"ROU", "RUS", "SGP", "ZAF", "ESP", "SWE", "CHE", "THA", "GBR",
"USA", "NVM")
infections <- c(6,251,5327,1755,1,346,7,9,3,2,4,1,5,9,1,14,1,3,1,1,238,1,1,5,1,9,4,27,63)
deaths <- c(0,43,349,299,0,37,1,0,0,0,0,0,2,0,0,2,0,0,0,0,33,1,0,0,0,2,0,0,5)
first.case <- c("2003-02-26","2003-02-23","2002-11-16","2003-02-15","2003-05-05","2003-02-25","2003-03-21",
"2003-03-09","2003-04-25","2003-04-06","2003-03-12","2003-04-09","2003-03-14","2003-03-31","2003-04-20",
"2003-02-25","2003-02-27","2003-04-25","2003-03-19","2003-05-05","2003-02-25","2003-04-03","2003-03-26",
"2003-03-28","2003-03-09","2003-03-11","2003-03-01","2003-02-24","2003-02-23")
last.case <- c("2003-04-01","2003-06-12","2003-06-03","2003-05-31","2003-05-05","2003-06-15","2003-05-03",
"2003-05-06","2003-05-06","2003-04-17","2003-04-20","2003-04-09","2003-04-22","2003-05-06","2003-04-20",
"2003-05-05","2003-02-27","2003-05-10","2003-03-19","2003-05-05","2003-05-05","2003-04-03","2003-03-26",
"2003-04-23","2003-03-09","2003-05-27","2003-04-01","2003-07-13","2003-04-14")
#combine the vectors into a dataframe
sars.data <- cbind(country.code, country.text, infections, deaths, first.case, last.case)
View(sars.data)
blogdown::serve_site()
#plot it
#set boundary color
boundary.color <- list(color = toRGB("gray38", width = 0.5))
#load the libraries
library(blogdown)
library(ggplot2)
library(tidyverse)
library(scales)
library(ggrepel)
library(plotly)
library(widgetframe)
#make a vector of years
Year <- c(1965, 2003, 2004, 2005, 2012, 2019)
#make a dummy variable for plotting
dummy <- c(1,1,1,1,1,1)
#make a vector of viruses
Virus <- c("229E &\nOC43", "SARS-CoV", "NL63", "HKU1", "MERS-CoV", "2019 Novel\nCoronavirus")
#combine the vectors and make a df
virus.year <- as.data.frame(cbind(Year, Virus, dummy))
#convert year to numeric
virus.year <- virus.year %>%
mutate(Year = as.numeric(as.character(Year)), 1, 1)
#clean it up
rm(Year, dummy, Virus)
#plot it
plot1 <- ggplot(virus.year, aes(x = Year, y = dummy, label = Virus)) +
geom_point(size = 4) +
geom_segment(aes(xend = Year, y = 0, yend = dummy)) +
geom_label(aes(y = 1.2)) +
labs(title = "Coronavirus Discovery by Year") +
#scale_x_date(labels = date_format("%Y"))+
scale_x_continuous(breaks = seq(from = 1960, to = 2020, by = 5))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank())
#plotify it
plot1 <- ggplotly(plot1, tooltip = c("label", "x"))
plot1 %>%
frameWidget(width = "100%", height = "100%")
#clean up last graph
rm(plot1, virus.year)
#datasource: https://www.who.int/csr/sars/country/table2004_04_21/en/
#get the raw data into vectors
country.text <- c("Australia","Canada","China","Hong Kong","Macau","Taiwan","France",
"Germany","India","Indonesia","Italy","Kuwait","Malaysia","Mongolia","New Zealand",
"Philippines","Ireland","Korea","Romania","Russia","Singapore","South Africa","Spain",
"Sweden","Switzerland","Thailand","United Kingdom","United States","Vietnam")
country.code <- c("AUS", "CAN", "CHN", "HKG", "MAC", "TWN", "FRA", "DEU", "IND",
"IDN", "ITA", "KWT", "MYS", "MNG", "NZL", "PHL", "IRL", "KOR",
"ROU", "RUS", "SGP", "ZAF", "ESP", "SWE", "CHE", "THA", "GBR",
"USA", "NVM")
infections <- c(6,251,5327,1755,1,346,7,9,3,2,4,1,5,9,1,14,1,3,1,1,238,1,1,5,1,9,4,27,63)
deaths <- c(0,43,349,299,0,37,1,0,0,0,0,0,2,0,0,2,0,0,0,0,33,1,0,0,0,2,0,0,5)
first.case <- c("2003-02-26","2003-02-23","2002-11-16","2003-02-15","2003-05-05","2003-02-25","2003-03-21",
"2003-03-09","2003-04-25","2003-04-06","2003-03-12","2003-04-09","2003-03-14","2003-03-31","2003-04-20",
"2003-02-25","2003-02-27","2003-04-25","2003-03-19","2003-05-05","2003-02-25","2003-04-03","2003-03-26",
"2003-03-28","2003-03-09","2003-03-11","2003-03-01","2003-02-24","2003-02-23")
last.case <- c("2003-04-01","2003-06-12","2003-06-03","2003-05-31","2003-05-05","2003-06-15","2003-05-03",
"2003-05-06","2003-05-06","2003-04-17","2003-04-20","2003-04-09","2003-04-22","2003-05-06","2003-04-20",
"2003-05-05","2003-02-27","2003-05-10","2003-03-19","2003-05-05","2003-05-05","2003-04-03","2003-03-26",
"2003-04-23","2003-03-09","2003-05-27","2003-04-01","2003-07-13","2003-04-14")
#combine the vectors into a dataframe
sars.data <- cbind(country.code, country.text, infections, deaths, first.case, last.case)
#plot it
#set boundary color
boundary.color <- list(color = toRGB("gray38", width = 0.5))
#map specs
map.specs <- list(showframe = FALSE, showcoastlines = FALSE, projection = list(type = "Mercator"))
#plot it
#set boundary color
boundary.color <- list(color = toRGB("gray38"), width = 0.5)
#map specs
map.specs <- list(showframe = FALSE, showcoastlines = FALSE, projection = list(type = "Mercator"))
head(sars.data)
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
#combine the vectors into a dataframe
sars.data <- as.dataframe(cbind(country.code, country.text, infections, deaths, first.case, last.case))
#combine the vectors into a dataframe
sars.data <- as.data.frame(cbind(country.code, country.text, infections, deaths, first.case, last.case))
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths)
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
colorbar(title = "Deaths") %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
str(sars.data)
#make sure deaths/infections are numeric
sars.data[,c(3,4)] <- as.numeric(sars.data[,c(3,4)])
#make sure deaths/infections are numeric
sars.data[,c(3,4)] <- apply(sars.data[,c(3,4)], 2, function(x) as.numeric(x))
str(sars.data)
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
colorbar(title = "Deaths") %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
#combine the vectors into a dataframe
sars.data <- as.data.frame(cbind(country.code, country.text, infections, deaths, first.case, last.case))
#make everything character
sars.data[] <- lapply(sars.data, as.character)
#make sure deaths/infections are numeric
sars.data[,c(3,4)] <- apply(sars.data[,c(3,4)], 2, function(x) as.numeric(x))
#plot it
#set boundary color
boundary.color <- list(color = toRGB("gray38"), width = 0.5)
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
colorbar(title = "Deaths") %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
str(sars.data)
#plot it
#set boundary color
boundary.color <- list(color = toRGB("gray38"), width = 0.5)
#map specs
map.specs <- list(showframe = FALSE, showcoastlines = FALSE, projection = list(type = "Mercator"))
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
colorbar(title = "Deaths") %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
#plot2 <-
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~paste0(country.text , "\n" , "Cases:" , infections , "\n" , "Deaths:" , deaths),
locations = ~country.code, marker = list(line = boundary.color)) %>%
colorbar(title = "Deaths") %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
#plot2 <-
plot_geo(sars.data) %>%
add_trace(z = ~infections, color = ~infections, colors = "Reds",
text = ~country, locations = ~country.code, marker = list(line = boundary.color)) %>%
colorbar(title = "Deaths") %>%
layout(title = 'Global SARS Outbreak<br>Source: <a href="https://www.who.int/csr/sars/country/table2004_04_21/en/">WHO</a>',
geo = map.specs)
blogdown::serve_site()
