temp.df <- left_join(temp.df, total.labels)
#organize facets by ordering the institution(s) factor
temp.df$`Institution(s)` <- factor(temp.df$`Institution(s)`,
levels = c(str_wrap(temp.inst, width = 15),
"AMAtlas Peers",
"All Higher Ed"))
#get the text for the ppt
#isolate data
text.df <- temp.df %>%
filter(Year == 2018 & variable == "Alumni Donors") %>%
mutate(`Institution(s)` = as.character(`Institution(s)`))
#generate text
#set formatting
#normal
fp_normal <- fp_text(font.size = 12)
#bold
fp_bold <- update(fp_normal, bold = TRUE)
#get the text
ppt.text <- block_list(
fpar(ftext("In 2018, your institution had ", fp_normal),
ftext(comma(text.df[[which(text.df$`Institution(s)` == str_wrap(temp.inst, width = 15)), 4]]), fp_bold),
ftext(" Alumni Donors. Your AMAtlas peers had a median of ", fp_normal),
ftext(comma(text.df[[which(text.df$`Institution(s)` == "AMAtlas Peers"), 4]]), fp_bold),
ftext(" Alumni Donors, and all Higher Education institutions had a median of ", fp_normal),
ftext(comma(text.df[[which(text.df$`Institution(s)` == "All Higher Ed"), 4]]), fp_bold),
ftext(".", fp_normal))
)
#ppt.text <- paste0("In 2018, your institution had ",
#                  comma(text.df[[which(text.df$`Institution(s)` == str_wrap(temp.inst, width = 15)), 4]]),
#                  " Alumni Donors. Your AMAtlas peers had a median of ",
#                  comma(text.df[[which(text.df$`Institution(s)` == "AMAtlas Peers"), 4]]),
#                  " Alumni Donors, and all Higher Education institutions had a median of ",
#                   comma(text.df[[which(text.df$`Institution(s)` == "All Higher Ed"), 4]]),
#                   ".")
#plot it
temp.plot <-  ggplot(temp.df, aes(x = `Year`, y = `value`, fill = `variable`)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
geom_text(aes(label = comma(Label, accuracy = 1), y= 1, vjust = 1, hjust = 1, angle = 90)) +
expand_limits(y = c(0,1.1))+
facet_wrap(.~`Institution(s)`) +
labs(caption = paste0("Numbers on graph represent 'Alumni of Record' for each year",
"\n",
"Source of Data: CASE Voluntary Support of Education (VSE) Survey, 2018"))+
theme(axis.text.x = element_text(angle = 90),
plot.title = element_text(size = rel(1.1), hjust = 0.5),
panel.background = element_blank(),
plot.background = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text = element_text(),
axis.line = element_line(colour="black"),
axis.ticks = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text()
)
#institution
#temp.df1
if (nrow(temp.df1[which(temp.df1$Year == 2017),])<1){
temp.df1 <- temp.df3 %>%
filter(Year %in% c(2018, 2017)) %>%
select(Year, `Institution(s)`, `Alumni Donors`) %>%
spread(key = Year, value = `Alumni Donors`) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`)) %>%
select(`Institution(s)`, `% Change from Last Year`)
temp.df1[1,1:2] <- c(temp.inst,NA)
}else {
if (temp.df1[which(temp.df1$Year == 2017), 5] < 1){
temp.df1 <- temp.df3 %>%
filter(Year %in% c(2018, 2017)) %>%
select(Year, `Institution(s)`, `Alumni Donors`) %>%
spread(key = Year, value = `Alumni Donors`) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`)) %>%
select(`Institution(s)`, `% Change from Last Year`)
temp.df1[1,1:2] <- c(temp.inst,NA)
} else {
temp.df1 <- temp.df1 %>%
filter(Year %in% c(2018, 2017)) %>%
select(Year, `Institution(s)`, `Alumni Donors`) %>%
spread(key = Year, value = `Alumni Donors`) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`)) %>%
select(`Institution(s)`, `% Change from Last Year`)
}
}
#rename
temp.df1[1,1] <- "Your Institution"
#AMAtlas peers
temp.df2 <- temp.df2 %>%
filter(Year %in% c(2018, 2017)) %>%
select(Year, `Institution(s)`, `Alumni Donors`) %>%
spread(key = Year, value = `Alumni Donors`) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`)) %>%
select(`Institution(s)`, `% Change from Last Year`)
#vse
temp.df3 <- temp.df3 %>%
filter(Year %in% c(2018, 2017)) %>%
select(Year, `Institution(s)`, `Alumni Donors`) %>%
spread(key = Year, value = `Alumni Donors`) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`)) %>%
select(`Institution(s)`, `% Change from Last Year`)
#combine the data
temp.df <- rbind(temp.df1, temp.df2, temp.df3) %>%
rename(` ` = `Institution(s)`) %>%
t()
#for to df
temp.df <- as.data.frame(temp.df)
#make first row headers and remove the row
names(temp.df) <- as.character(unlist(temp.df[1,]))
temp.df <- temp.df[-1,]
#make row name into columns and rename
temp.df <- temp.df%>%
rownames_to_column()
colnames(temp.df)[1] <- " "
#change NaN's and NA's to NA's
temp.df <- temp.df %>%
mutate_all(funs(str_replace(.,"NaN%","n/a"))) %>%
mutate_all(funs(str_replace(.,"NA%","n/a")))
#change NA to n/a
temp.df[is.na(temp.df)] <- "n/a"
#now to flextable it
ft <- flextable(data = temp.df) %>%
add_header_lines(values = c("1 Year Percentage Change in Alumni Donors"))%>%
theme_booktabs() %>%
width(width = 1)
#add it to ppt
pptpres <- pptpres %>%
add_slide(layout = "Title and Content", master = "Custom Design") %>%
ph_with("Alumni Donors",
location = ph_location_type(type = "title")) %>%
ph_with_vg(code = print(temp.plot), type = "body") %>%
ph_with(ft,
location = ph_location_type(type = "ftr")) %>%
ph_with(ppt.text,
location = ph_location_type(type = "sldNum"))
#reorder
pptpres <- move_slide(pptpres, index = 7, to = 6)
rm(ft, temp.df, temp.df1, temp.df2, temp.df3, temp.plot, total.labels,
text.df, ppt.text)
############################################################
#7. Slide 6 - Philanthropic Support by Purpose
############################################################
#get institution
temp.df1 <- temp.inst.data %>%
group_by(Year) %>%
summarise(`Institution(s)` = str_wrap(temp.inst, width = 15),
`Build/Equip/Prop` = median(Property..Buildings..and.Equipment..Column.4., na.rm = T),
`Endowment (R)` = median(Endowment..Income.Restricted..Column.6. ,na.rm = T),
`Endowment (U)` = median(Endowment..Income.Unrestricted..Column.5. ,na.rm = T),
`Loan Funds` = median(Loan.Funds..Column.7.,na.rm = T),
`Current Ops (R)` = median(Current.Operations..Restricted..Column.3.,na.rm = T),
`Current Ops (U)` = median(Current.Operations..Unrestricted..Column.2.,na.rm = T),
#`Total` = `Build/Equip/Prop`+`Endowment (R)` + `Endowment (U)` + `Loan Funds`+ `Current Ops (R)` + `Current Ops (U)`,
`N` = n()) %>%
mutate(`Total` = rowSums(.[3:8], na.rm = T)) %>%
gather(key = "Purpose", value = "Amount", `Build/Equip/Prop`:`Total`)
#get peers
temp.df2 <- temp.peers %>%
group_by(Year) %>%
summarise(`Institution(s)` = "AMAtlas Peers",
`Build/Equip/Prop` = median(Property..Buildings..and.Equipment..Column.4., na.rm = T),
`Endowment (R)` = median(Endowment..Income.Restricted..Column.6. ,na.rm = T),
`Endowment (U)` = median(Endowment..Income.Unrestricted..Column.5. ,na.rm = T),
`Loan Funds` = median(Loan.Funds..Column.7.,na.rm = T),
`Current Ops (R)` = median(Current.Operations..Restricted..Column.3.,na.rm = T),
`Current Ops (U)` = median(Current.Operations..Unrestricted..Column.2.,na.rm = T),
#`Total` = `Build/Equip/Prop`+ `Endowment (R)` + `Endowment (U)` + `Loan Funds`+ `Current Ops (R)` + `Current Ops (U)`,
`N` = n()) %>%
mutate(`Total` = rowSums(.[3:8], na.rm = T)) %>%
gather(key = "Purpose", value = "Amount", `Build/Equip/Prop`:`Total`)
#get vse
temp.df3 <- vse %>%
group_by(Year) %>%
summarise(`Institution(s)` = "All Higher Ed",
`Build/Equip/Prop` = median(Property..Buildings..and.Equipment..Column.4., na.rm = T),
`Endowment (R)` = median(Endowment..Income.Restricted..Column.6. ,na.rm = T),
`Endowment (U)` = median(Endowment..Income.Unrestricted..Column.5. ,na.rm = T),
`Loan Funds` = median(Loan.Funds..Column.7.,na.rm = T),
`Current Ops (R)` = median(Current.Operations..Restricted..Column.3.,na.rm = T),
`Current Ops (U)` = median(Current.Operations..Unrestricted..Column.2.,na.rm = T),
#          `Total` = `Build/Equip/Prop`+ `Endowment (R)` + `Endowment (U)` + `Loan Funds`+ `Current Ops (R)` + `Current Ops (U)`,
`N` = n()) %>%
mutate(`Total` = rowSums(.[3:8], na.rm = T)) %>%
gather(key = "Purpose", value = "Amount", `Build/Equip/Prop`:`Total`)
#combine the data
temp.df <- rbind(temp.df1, temp.df2, temp.df3)
#pull out the text and generate a label
#temp.text <- temp.df %>%
#  filter(Purpose == "Total") %>%
#  mutate(Label = ifelse(Amount < 1000000, paste0(dollar(Amount/1000, accuracy = 1),"K"),
#                        ifelse(Amount < 1000000000, paste0(dollar(Amount/1000000, accuracy = 0.1),"M"),
#                               paste0(dollar(Amount/1000000000, accuracy = 0.1),"B")))) #%>%
#join in it the overall labels, so that everything matches across the ppt
temp.text <- temp.df %>%
filter(Purpose == "Total") %>%
left_join(.,ts.labels)
#select(-Source)
#remove it from the data
temp.df <- temp.df %>%
filter(!Purpose == "Total")
#get proprortions
temp.df <- temp.df %>%
group_by(Year,`Institution(s)`) %>%
mutate(Total = sum(Amount, na.rm = T)) %>%
ungroup()%>%
mutate(Prop = Amount/Total) %>%
select(Year:Purpose, Prop) %>%
left_join(., ts.labels) %>%
mutate(Amount = Height*Prop) %>%
select(Year, `Institution(s)`,Purpose,Amount)
#organize facets by ordering the institution(s) factor
temp.df$`Institution(s)` <- factor(temp.df$`Institution(s)`,
levels = c(str_wrap(temp.inst, width = 15),
"AMAtlas Peers",
"All Higher Ed"))
temp.text$`Institution(s)` <- factor(temp.text$`Institution(s)`,
levels = c(str_wrap(temp.inst, width = 15),
"AMAtlas Peers",
"All Higher Ed"))
#remove n
temp.df <- temp.df %>%
filter(!Purpose == "N")
#plot it
temp.plot <- ggplot(temp.df, aes(x = Year, y= Amount)) +
geom_bar(stat = "identity", position = "stack", aes(fill = Purpose)) +
facet_wrap(.~`Institution(s)`, scales = "free_y") +
geom_text(data = temp.text, aes(x = Year, y= Height, label = Label, vjust = 1, hjust = 1, angle = 90))+
labs(caption = paste0("(R) = Restricted, (U) = Unrestricted",
"\n",
"Dollars on graph represent 'Total Support' for each year",
"\n",
"Source of Data: CASE Voluntary Support of Education (VSE) Survey, 2018"))+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_blank())
#institution
#temp.df1
if (nrow(temp.df1[which(temp.df1$Year == 2017),])<1){
temp.df1a <- temp.df3 %>%
#select(-`N`) %>%
filter(Year %in% c(2018, 2017)) %>%
spread(key = Year, value = Amount) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`, accuracy = .1))%>%
select(`Institution(s)`, Purpose, `% Change from Last Year`) %>%
spread(key = Purpose, value = `% Change from Last Year`)
temp.df1a[1,1:9] <- c(temp.inst,NA, NA, NA,NA,NA,NA,NA,NA)
temp.df1b <- temp.df1 %>%
#select(-`N`) %>%
filter(Year %in% c(2018)) %>%
spread(key = Year, value = Amount) %>%
select(`Institution(s)`, Purpose, `2018 ($)` = `2018`) %>%
spread(key = Purpose, value = `2018 ($)`)
temp.df1 <- rbind(temp.df1b,temp.df1a)
}else {
temp.df1a <- temp.df1 %>%
#select(-`N`) %>%
filter(Year %in% c(2018, 2017)) %>%
spread(key = Year, value = Amount)
temp.df1a$`2017` <- na_if(temp.df1a$`2017`, 0)
temp.df1a <- temp.df1a %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`, accuracy = .1)) %>%
select(`Institution(s)`, Purpose, `% Change from Last Year`) %>%
spread(key = Purpose, value = `% Change from Last Year`)
temp.df1b <- temp.df1 %>%
#select(-`N`) %>%
filter(Year %in% c(2018)) %>%
spread(key = Year, value = Amount) %>%
select(`Institution(s)`, Purpose, `2018 ($)` = `2018`) %>%
spread(key = Purpose, value = `2018 ($)`)
temp.df1 <- rbind(temp.df1b,temp.df1a)}
temp.df1 <- temp.df1 %>% select(-`N`)
#rename
temp.df1[1:2,1] <- c("Your Inst ($)", "Your Inst (%)")
#AMAtlas peers
temp.df2 <- temp.df2 %>%
filter(Year %in% c(2018, 2017)) %>%
spread(key = Year, value = Amount)
temp.df2$`2017` <- na_if(temp.df2$`2017`, 0)
temp.df2 <- temp.df2 %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`))%>%
select(`Institution(s)`, Purpose, `% Change from Last Year`) %>%
spread(key = Purpose, value = `% Change from Last Year`) %>%
select(-`N`)
#vse
temp.df3 <- temp.df3 %>%
filter(Year %in% c(2018, 2017)) %>%
spread(key = Year, value = Amount) %>%
mutate(`% Change from Last Year` = percent((`2018`-`2017`)/`2017`))%>%
select(`Institution(s)`, Purpose, `% Change from Last Year`) %>%
spread(key = Purpose, value = `% Change from Last Year`)%>%
select(-`N`)
#combine the data
temp.df <- rbind(temp.df1, temp.df2, temp.df3) %>%
rename(` ` = `Institution(s)`) %>%
t()
#for to df
temp.df <- as.data.frame(temp.df)
#make first row headers and remove the row
names(temp.df) <- as.character(unlist(temp.df[1,]))
temp.df <- temp.df[-1,]
#make row name into columns and rename
temp.df <- temp.df%>%
rownames_to_column()
colnames(temp.df)[1] <- " "
#change NaN's, NA's, and Inf to NA's
temp.df <- temp.df %>%
mutate_all(funs(str_replace(.,"NaN%","n/a"))) %>%
mutate_all(funs(str_replace(.,"NA%","n/a"))) %>%
mutate_all(funs(str_replace(., "Inf", "n/a")))
#change NA to n/a
temp.df[is.na(temp.df)] <- "n/a"
#change $ to numeric
temp.df$`Your Inst ($)` <- as.numeric(temp.df$`Your Inst ($)`)
#change it to normal language
temp.df <- temp.df %>%
mutate(`Your Inst ($)` = ifelse(`Your Inst ($)` < 1000000, paste0(dollar(`Your Inst ($)`/1000, accuracy = 1),"K"),
ifelse(`Your Inst ($)` < 1000000000, paste0(dollar(`Your Inst ($)`/1000000, accuracy = 0.1),"M"),
paste0(dollar(`Your Inst ($)`/1000000000, accuracy = 0.1),"B"))))
#rename columns
colnames(temp.df) <- c(" ",
"Your Inst. 2018 $",
"Your Inst. 1 yr % change",
"AMAtlas Peers 1 year % change",
"All Higher Ed 1 year % change")
#change NA to n/a
temp.df[is.na(temp.df)] <- "n/a"
#add yoy changes from cumulative slide
temp.df[7,4] <- percent(yoy.peers[1,1], accuracy = .1)
temp.df[7,5] <- percent(yoy.vse[1,1], accuracy = .1)
#now to flextable it
ft <- flextable(data = temp.df) %>%
#add_header_lines(values = c("1 Year Percentage Change from 2017 to 2018"))%>%
theme_booktabs() %>%
width(width = c(1,0.75,0.75,0.75,0.75))
#add it to ppt
pptpres <- pptpres %>%
add_slide(layout = "Two Content", master = "Custom Design") %>%
ph_with("Philanthropic Support by Purpose",
location = ph_location_type(type = "title")) %>%
ph_with_vg(code = print(temp.plot),
type = "body", index = 2) %>%
#location = ph_location_label(ph_label = "Content Placeholder 2")) %>%
ph_with(ft,
location = ph_location_label(ph_label = "Content Placeholder 3"))
#reorder
pptpres <- move_slide(pptpres, index = 8, to = 7)
rm(ft, temp.df, temp.df1, temp.df2, temp.df3, temp.plot, temp.text)
############################################################
#8. Slide 7 - Largest Gifts as % of Income
############################################################
#get institution
temp.df1 <- temp.inst.data %>%
group_by(Year) %>%
summarise(`Institution(s)` = str_wrap(temp.inst, width = 15),
`3 Largest (Individual)` = median(X3.Largest.Gifts.Living.Individuals..Column.23./Total.Support..Column.1., na.rm = T),
`3 Largest (Bequest)` = median(X3.Largest.Gifts.Bequests..Column.24./Total.Support..Column.1., na.rm = T),
`N` = n()) %>%
gather(key = "Source", value = "Amount", `3 Largest (Individual)`:`3 Largest (Bequest)`)
#get peers
temp.df2 <- temp.peers %>%
group_by(Year) %>%
summarise(`Institution(s)` = "AMAtlas Peers",
`3 Largest (Individual)` = median(X3.Largest.Gifts.Living.Individuals..Column.23./Total.Support..Column.1., na.rm = T),
`3 Largest (Bequest)` = median(X3.Largest.Gifts.Bequests..Column.24./Total.Support..Column.1., na.rm = T),
`N` = n()) %>%
gather(key = "Source", value = "Amount", `3 Largest (Individual)`:`3 Largest (Bequest)`)
#get vse
temp.df3 <- vse %>%
group_by(Year) %>%
summarise(`Institution(s)` = "All Higher Ed",
`3 Largest (Individual)` = median(X3.Largest.Gifts.Living.Individuals..Column.23./Total.Support..Column.1., na.rm = T),
`3 Largest (Bequest)` = median(X3.Largest.Gifts.Bequests..Column.24./Total.Support..Column.1., na.rm = T),
`N` = n()) %>%
gather(key = "Source", value = "Amount", `3 Largest (Individual)`:`3 Largest (Bequest)`)
#combine the data
temp.df <- rbind(temp.df1, temp.df2, temp.df3)
#generate the label
temp.df <- temp.df %>%
mutate(Label = percent(Amount, accuracy = .1))
#organize facets by ordering the institution(s) factor
temp.df$`Institution(s)` <- factor(temp.df$`Institution(s)`,
levels = c(str_wrap(temp.inst, width = 15),
"AMAtlas Peers",
"All Higher Ed"))
#plot it
temp.plot <- ggplot(temp.df, aes(x = Year, y= Amount, label = Label, fill = Source)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(.~`Institution(s)`) +
ggrepel::geom_text_repel(data = temp.df[which(temp.df$Amount > 0.0001 & temp.df$Amount > 0.069999), ],
aes(vjust = 1, hjust = 1, angle = 90), position = position_dodge(width = 1), size = 3)+
ggrepel::geom_text_repel(data = temp.df[which(temp.df$Amount > 0.0001 & temp.df$Amount < .07), ],
aes(vjust = 0, hjust = 0, angle = 90), position = position_dodge(width = 1), size = 3)+
labs(caption = "Source of Data: CASE Voluntary Support of Education (VSE) Survey, 2018")+
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
plot.background = element_blank(), plot.title = element_text(hjust = 0.5),
text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_blank(),
legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#calculate % for text
perc.text <- temp.df %>%
filter(`Institution(s)` == str_wrap(temp.inst, width = 15)) %>%
filter(Year == 2018)%>%
summarise(sum = sum(Amount, na.rm = T))
#generate custom text for ppt
ppt.text <- paste0("In 2018, ",
round(perc.text[[1,1]]*100, digits = 1),
" percent of funds received came from the three largest gifts from individuals and/or the three largest realized bequests. ",
ifelse(perc.text[[1,1]]>=.2,
" Over time, major gifts have become a larger portion of funds raised. Pay careful attention to giving bands to ensure enough donors are continuing to upgrade into mid and major giving levels. ",
ifelse(is.na(temp.inst.data[nrow(temp.inst.data), 9]),
"",
ifelse(temp.inst.data[nrow(temp.inst.data), 9]>0,
"While major gifts are certainly driving growth, it appears your institution is not over-reliant on support from the largest gifts.",
"Determine the impact of major gifts on overall funding and if there are specific gift bands where you may focus efforts to drive both growth in mid-level and major giving donors."
)
)
)
)
#add it to ppt
pptpres <- pptpres %>%
add_slide(layout = "Title and Content", master = "Custom Design") %>%
ph_with("Largest Gifts as % of Total Support",
location = ph_location_type(type = "title")) %>%
ph_with_vg(code = print(temp.plot), type = "body") %>%
ph_with(ppt.text,
location = ph_location_type(type = "ftr"))
#reorder
pptpres <- move_slide(pptpres, index = 9, to = 8)
#clean
rm(temp.df, temp.df1, temp.df2, temp.df3, temp.plot)
############################################################
#9. Slide 8 - AMAtlas Peers
############################################################
#id them
peer.names <- as.data.frame(unique(temp.peers$Institution))
#sort them
peer.names <- peer.names %>%
arrange(`unique(temp.peers$Institution)`)
#split them
peer.name1 <- paste0(as.character(peer.names[1, 1]), "\n")
peer.name2 <- paste0(as.character(peer.names[2, 1]), "\n")
peer.name3 <- paste0(as.character(peer.names[3, 1]), "\n")
peer.name4 <- paste0(as.character(peer.names[4, 1]), "\n")
peer.name5 <- paste0(as.character(peer.names[5, 1]), "\n")
peer.name6 <- paste0(as.character(peer.names[6, 1]), "\n")
peer.name7 <- paste0(as.character(peer.names[7, 1]), "\n")
peer.name8 <- paste0(as.character(peer.names[8, 1]), "\n")
peer.name9 <- paste0(as.character(peer.names[9, 1]), "\n")
peer.name10 <- paste0(as.character(peer.names[10, 1]))
#add it to ppt
pptpres <- on_slide(pptpres, 4) %>%
ph_with(paste0(peer.name1, peer.name2, peer.name3, peer.name4, peer.name5,
peer.name6, peer.name7, peer.name8, peer.name9, peer.name10),
location = ph_location_type(type = "body"))
#reorder
pptpres <- move_slide(pptpres, index = 4, to = 3)
#add it to ppt
#pptpres <- pptpres %>%
#  add_slide(layout = "Title and Content", master = "Custom Design") %>%
#  ph_with("AMAtlas Peers",
#          location = ph_location_type(type = "title")) %>%
#  ph_with(paste0(peer.name1, peer.name2, peer.name3, peer.name4, peer.name5,
#                 peer.name6, peer.name7, peer.name8, peer.name9, peer.name10),
#          location = ph_location_type(type = "body")) %>%
#  ph_with(paste0("AMAtlas peers are based on a combination of variables ",
#                 "from the Support of Education Survey, IPEDS, and Carnegie Classifications. ",
#                 "This algorithm then selects the ten institutions most similar to yours based ",
#                 "on these variables for Fiscal Year 2018."),
#          location = ph_location_type(type = "ftr"))
#add it to ppt
#pptpres <- pptpres %>%
#  add_slide(layout = "Two Content", master = "Custom Design") %>%
#  ph_with("AMAtlas Peers",
#          location = ph_location_type(type = "title")) %>%
#  ph_with(paste0(peer.name1, peer.name2, peer.name3, peer.name4, peer.name5),
#          location = ph_location_label(ph_label = "Content Placeholder 2")) %>%
#  ph_with(paste0(peer.name6, peer.name7, peer.name8, peer.name9, peer.name10),
#          location = ph_location_label(ph_label = "Content Placeholder 3"))
rm(peer.names, peer.name1, peer.name2, peer.name3, peer.name4, peer.name5, peer.name6,
peer.name7, peer.name8, peer.name9, peer.name10)
#switch order of slides, since 2nd one doesnt' change
#and comes pre-populated
#pptpres <- move_slide(pptpres, 9, 3)
############################################################
##get slide lay out names
#layout_summary(pptpres)
## get locations on slide
layout_properties(x = pptpres, layout = "Content with Caption", master = "Custom Design")
#write out the ppt
pptpres %>%
print(target = paste0(out.data,temp.inst,"_2018.pptx"))
#clean it for the next iteration
rm(pptpres, temp.inst.data, temp.peers, temp.inst)
#keep my sanity while looping
print(paste(percent(iteration/933),iteration))
iteration <- iteration+1
}
